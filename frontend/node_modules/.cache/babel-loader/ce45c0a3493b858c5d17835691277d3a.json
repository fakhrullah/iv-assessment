{"ast":null,"code":"var _jsxFileName = \"/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from './components/Marker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const offices = [{\n    name: 'Singapore',\n    slug: 'singapore',\n    location: {\n      lat: 1.285194,\n      lng: 103.8522982\n    }\n  }, {\n    name: 'London',\n    slug: 'london',\n    location: {\n      lat: 51.5049375,\n      lng: -0.0964509\n    }\n  }];\n\n  const getOfficeLocation = slug => {\n    var _offices$find;\n\n    return ((_offices$find = offices.find(office => office.slug === slug)) === null || _offices$find === void 0 ? void 0 : _offices$find.location) || {\n      lat: 0,\n      lng: 0\n    };\n  };\n\n  const getCurrentOffice = slug => offices.find(ofc => ofc.slug === slug) || offices[0];\n\n  const [office, setOffice] = useState('singapore');\n  const zoom = 8;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Choose location:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setOffice(e.target.value),\n        children: offices.map(office => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: office.slug,\n          children: office.name\n        }, office.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Slider car number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '320px'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyCzOjhJjfh6FGaYAxpvCekVI8Zvn2JWyZE'\n        },\n        defaultCenter: getOfficeLocation('singapore'),\n        defaultZoom: zoom,\n        yesIWantToUseGoogleMapApiInternals: true,\n        center: getOfficeLocation(office),\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          text: getCurrentOffice(office).name,\n          lat: getCurrentOffice(office).location.lat,\n          lng: getCurrentOffice(office).location.lng\n        }, getCurrentOffice(office).slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Refresh rate interval:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vGDMvJHkRhWggCopXOuIj9g1u0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx"],"names":["React","useState","GoogleMapReact","Marker","App","offices","name","slug","location","lat","lng","getOfficeLocation","find","office","getCurrentOffice","ofc","setOffice","zoom","e","target","value","map","width","height","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from './components/Marker';\nimport { OfficeModel } from './models/OfficeModel';\nimport { CoordinateModel } from './models/CoordinateModel';\n\nfunction App() {\n\n  const offices: OfficeModel[] = [\n    {\n      name: 'Singapore',\n      slug: 'singapore',\n      location: {\n        lat: 1.285194,\n        lng: 103.8522982\n      }\n    },\n    {\n      name: 'London',\n      slug: 'london',\n      location: {\n        lat: 51.5049375,\n        lng: -0.0964509\n      }\n    },\n  ];\n\n  const getOfficeLocation = (slug: string): CoordinateModel => offices\n    .find((office) => office.slug === slug)?.location || {lat: 0, lng: 0};\n\n  const getCurrentOffice = (slug: string): OfficeModel => offices\n    .find((ofc) => ofc.slug === slug) || offices[0];\n\n  const [office, setOffice] = useState<string>('singapore');\n  const zoom = 8;\n\n  return (\n    <div className=\"App\">\n      <div>\n        Choose location:\n        <select\n          onChange={(e) => setOffice(e.target.value)}\n          >\n          {\n            offices\n              .map((office) => (\n                <option \n                key={office.slug} \n                value={office.slug}\n                >{office.name}</option>\n              ))\n          }\n        </select>\n      </div>\n\n      <div>Slider car number</div>\n\n      <div style={{width: '100%', height: '320px'}}>\n        <GoogleMapReact\n           bootstrapURLKeys={{ key: 'AIzaSyCzOjhJjfh6FGaYAxpvCekVI8Zvn2JWyZE'}}\n           defaultCenter={getOfficeLocation('singapore')}\n           defaultZoom={zoom}\n           yesIWantToUseGoogleMapApiInternals\n           center={getOfficeLocation(office)}\n          >\n            <Marker\n                key={getCurrentOffice(office).slug}\n                text={getCurrentOffice(office).name}\n                lat={getCurrentOffice(office).location.lat}\n                lng={getCurrentOffice(office).location.lng}\n              />\n        </GoogleMapReact>\n      </div>\n\n      <div>\n        Refresh rate interval: \n        {' '}\n        <input type=\"number\"/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}