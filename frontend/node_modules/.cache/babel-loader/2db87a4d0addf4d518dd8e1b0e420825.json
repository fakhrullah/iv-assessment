{"ast":null,"code":"var _jsxFileName = \"/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const offices = [{\n    name: 'Singapore',\n    slug: 'singapore',\n    location: {\n      lat: 1.285194,\n      lng: 103.8522982\n    }\n  }, {\n    name: 'London',\n    slug: 'london',\n    location: {\n      lat: 51.5049375,\n      lng: -0.0964509\n    }\n  }];\n\n  const getOfficeLocation = slug => {\n    var _offices$find;\n\n    return ((_offices$find = offices.find(office => office.slug === slug)) === null || _offices$find === void 0 ? void 0 : _offices$find.location) || {\n      lat: 0,\n      lng: 0\n    };\n  };\n\n  const [officeLocation, setOfficeLocation] = useState(getOfficeLocation('singapore'));\n  const zoom = 8;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Choose location:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        children: offices.map(office => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: office.slug,\n          children: office.name\n        }, office.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Slider car number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: ''\n        },\n        defaultCenter: officeLocation,\n        defaultZoom: zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Refresh rate interval:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jsPWQFX8owuYZUMtksssG9a44C8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx"],"names":["React","useState","GoogleMapReact","App","offices","name","slug","location","lat","lng","getOfficeLocation","find","office","officeLocation","setOfficeLocation","zoom","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAaA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,OAAsB,GAAG,CAC7B;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,GAAG,EAAE,QADG;AAERC,MAAAA,GAAG,EAAE;AAFG;AAHZ,GAD6B,EAS7B;AACEJ,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,GAAG,EAAE,UADG;AAERC,MAAAA,GAAG,EAAE,CAAC;AAFE;AAHZ,GAT6B,CAA/B;;AAmBA,QAAMC,iBAAiB,GAAIJ,IAAD;AAAA;;AAAA,WAAiC,kBAAAF,OAAO,CAC/DO,IADwD,CAClDC,MAAD,IAAYA,MAAM,CAACN,IAAP,KAAgBA,IADuB,iEAChBC,QADgB,KACJ;AAACC,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,GAAG,EAAE;AAAd,KAD7B;AAAA,GAA1B;;AAGA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAgBS,iBAAiB,CAAC,WAAD,CAAjC,CAApD;AACA,QAAMK,IAAI,GAAG,CAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,kDAEE;AAAA,kBACGX,OAAO,CAACY,GAAR,CAAaJ,MAAD,iBAAa;AAA0B,UAAA,KAAK,EAAEA,MAAM,CAACN,IAAxC;AAAA,oBAA+CM,MAAM,CAACP;AAAtD,WAAaO,MAAM,CAACN,IAApB;AAAA;AAAA;AAAA;AAAA,gBAAzB;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAA,6BACE,QAAC,cAAD;AACG,QAAA,gBAAgB,EAAE;AAAEW,UAAAA,GAAG,EAAE;AAAP,SADrB;AAEG,QAAA,aAAa,EAAEJ,cAFlB;AAGG,QAAA,WAAW,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE;AAAA,2CAEG,GAFH,eAGE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAvDQZ,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\n\ninterface LocationModel {\n  lat: number\n  lng: number\n}\n\ninterface OfficeModel {\n  name: string\n  slug: string\n  location: LocationModel\n}\n\nfunction App() {\n\n  const offices: OfficeModel[] = [\n    {\n      name: 'Singapore',\n      slug: 'singapore',\n      location: {\n        lat: 1.285194,\n        lng: 103.8522982\n      }\n    },\n    {\n      name: 'London',\n      slug: 'london',\n      location: {\n        lat: 51.5049375,\n        lng: -0.0964509\n      }\n    },\n  ];\n\n  const getOfficeLocation = (slug: string): LocationModel => offices\n    .find((office) => office.slug === slug)?.location || {lat: 0, lng: 0};\n\n  const [officeLocation, setOfficeLocation] = useState<LocationModel>(getOfficeLocation('singapore'));\n  const zoom = 8;\n\n  return (\n    <div className=\"App\">\n      <div>\n        Choose location:\n        <select>\n          {offices.map((office) => (<option key={office.slug} value={office.slug}>{office.name}</option>))}\n        </select>\n      </div>\n\n      <div>Slider car number</div>\n\n      <div>\n        <GoogleMapReact\n           bootstrapURLKeys={{ key: ''}}\n           defaultCenter={officeLocation}\n           defaultZoom={zoom}\n          >\n        </GoogleMapReact>\n      </div>\n\n      <div>\n        Refresh rate interval: \n        {' '}\n        <input type=\"number\"/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}