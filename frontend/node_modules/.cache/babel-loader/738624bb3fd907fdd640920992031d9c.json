{"ast":null,"code":"var _jsxFileName = \"/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport Marker, { MarkerStyle } from './components/Marker';\nimport { offices } from './data/offices';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDrivers = () => [{\n  \"id\": \"0-xmxr1d2uvp9\",\n  \"location\": {\n    \"lat\": -0.00012070285158789822,\n    \"lng\": 0.0032262641730860216\n  },\n  \"bearing\": 55\n}, {\n  \"id\": \"1-6xo6j9agy6\",\n  \"location\": {\n    \"lat\": -0.001490121361325301,\n    \"lng\": -0.004803436455318129\n  },\n  \"bearing\": 86\n}, {\n  \"id\": \"2-nlspzop4gl\",\n  \"location\": {\n    \"lat\": -0.005499108513977029,\n    \"lng\": -0.0014426628774745823\n  },\n  \"bearing\": 9\n}, {\n  \"id\": \"3-9zg4t1loghr\",\n  \"location\": {\n    \"lat\": 0.002036699403583106,\n    \"lng\": -0.004170542055086246\n  },\n  \"bearing\": 200\n}];\n\nfunction App() {\n  _s();\n\n  var _driverQuery$data, _driverQuery$data2;\n\n  const getCurrentOffice = slug => offices.find(ofc => ofc.slug === slug) || offices[0];\n\n  const driverQuery = useQuery('drivers', getDrivers, {\n    initialData: []\n  });\n  const [officeData, setOfficeData] = useState(offices[0]);\n  const zoom = 11;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Choose location:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setOfficeData({ ...officeData,\n          ...getCurrentOffice(e.target.value)\n        }),\n        children: offices.map(office => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: office.slug,\n          children: office.name\n        }, office.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Slider car number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), (_driverQuery$data = driverQuery.data) === null || _driverQuery$data === void 0 ? void 0 : _driverQuery$data.map(driver => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: driver.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '320px'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyCzOjhJjfh6FGaYAxpvCekVI8Zvn2JWyZE'\n        },\n        defaultCenter: officeData.location,\n        defaultZoom: zoom,\n        yesIWantToUseGoogleMapApiInternals: true,\n        center: officeData.location,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          text: officeData.name,\n          lat: officeData.location.lat,\n          lng: officeData.location.lng,\n          markerStyle: MarkerStyle.office\n        }, officeData.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), (_driverQuery$data2 = driverQuery.data) === null || _driverQuery$data2 === void 0 ? void 0 : _driverQuery$data2.map(driver => /*#__PURE__*/_jsxDEV(Marker, {\n          text: driver.id,\n          lat: driver.location.lat,\n          lng: driver.location.lng,\n          markerStyle: MarkerStyle.car\n        }, driver.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Refresh rate interval:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"reWhi5H/a5w6GRdgkz01o9aK8LY=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/fakhrullah/Projects/splyt-assessment-latest-fs_tech-task-q1k21/frontend/src/App.tsx"],"names":["React","useState","GoogleMapReact","Marker","MarkerStyle","offices","useQuery","getDrivers","App","getCurrentOffice","slug","find","ofc","driverQuery","initialData","officeData","setOfficeData","zoom","e","target","value","map","office","name","data","driver","id","width","height","key","location","lat","lng","car"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport Marker, { MarkerStyle } from './components/Marker';\nimport { OfficeModel } from './models/OfficeModel';\nimport { offices } from './data/offices'\nimport { useQuery } from 'react-query';\nimport { DriverModel } from './models/DriverModel';\n\nconst getDrivers = (): DriverModel[] => [\n  {\n    \"id\": \"0-xmxr1d2uvp9\",\n    \"location\": {\n      \"lat\": -0.00012070285158789822,\n      \"lng\": 0.0032262641730860216,\n    },\n    \"bearing\": 55\n  },\n  {\n    \"id\": \"1-6xo6j9agy6\",\n    \"location\": {\n      \"lat\": -0.001490121361325301,\n      \"lng\": -0.004803436455318129,\n    },\n    \"bearing\": 86\n  },\n  {\n    \"id\": \"2-nlspzop4gl\",\n    \"location\": {\n      \"lat\": -0.005499108513977029,\n      \"lng\": -0.0014426628774745823,\n    },\n    \"bearing\": 9\n  },\n  {\n    \"id\": \"3-9zg4t1loghr\",\n    \"location\": {\n      \"lat\": 0.002036699403583106,\n      \"lng\": -0.004170542055086246,\n    },\n    \"bearing\": 200\n  },\n]\n\n\nfunction App() {\n\n  const getCurrentOffice = (slug: string): OfficeModel => offices\n    .find((ofc) => ofc.slug === slug) || offices[0];\n\n  const driverQuery = useQuery('drivers', getDrivers, {\n    initialData: [],\n  });\n\n  const [officeData, setOfficeData] = useState<OfficeModel>(offices[0]);\n  const zoom = 11;\n\n  return (\n    <div className=\"App\">\n      <div>\n        Choose location:\n        <select\n          onChange={(e) => setOfficeData({...officeData, ...getCurrentOffice(e.target.value)})}\n          >\n          {\n            offices\n              .map((office) => (\n                <option \n                key={office.slug} \n                value={office.slug}\n                >{office.name}</option>\n              ))\n          }\n        </select>\n      </div>\n\n      <div>Slider car number</div>\n\n      {driverQuery.data?.map((driver) => (\n        <h3>{driver.id}</h3>\n      ))}\n\n      <div style={{width: '100%', height: '320px'}}>\n        <GoogleMapReact\n           bootstrapURLKeys={{ key: 'AIzaSyCzOjhJjfh6FGaYAxpvCekVI8Zvn2JWyZE'}}\n           defaultCenter={officeData.location}\n           defaultZoom={zoom}\n           yesIWantToUseGoogleMapApiInternals\n           center={officeData.location}\n          >\n            <Marker\n                key={officeData.slug}\n                text={officeData.name}\n                lat={officeData.location.lat}\n                lng={officeData.location.lng}\n                markerStyle={MarkerStyle.office}\n              />\n\n      {driverQuery.data?.map((driver) => (\n        \n        <Marker\n        key={driver.id}\n        text={driver.id}\n        lat={driver.location.lat}\n        lng={driver.location.lng}\n        markerStyle={MarkerStyle.car}\n      />\n      ))}\n        </GoogleMapReact>\n      </div>\n\n      <div>\n        Refresh rate interval: \n        {' '}\n        <input type=\"number\"/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}